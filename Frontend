<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            padding: 20px;
        }
        .form-container, .users-table-container {
            width: 80%;
            margin: auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        .form-container input, .form-container button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .form-container button {
            background-color: #4CAF50;
            color: white;
            cursor: pointer;
        }
        .form-container button:hover {
            background-color: #45a049;
        }
        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }
        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
        button {
            background-color: #f44336;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #e53935;
        }
    </style>
</head>
<body>

<h2 style="text-align: center;">User Management</h2>

<!-- Register Section -->
<div class="form-container" id="registerSection">
    <h3>Register New User</h3>
    <form id="registerForm">
        <input type="text" id="regName" placeholder="Name" required>
        <input type="email" id="regEmail" placeholder="Email" required>
        <input type="date" id="regDateOfBirth" placeholder="Date of Birth" required>
        <input type="text" id="regLocation" placeholder="Location" required>
        <button type="submit">Register</button>
    </form>
</div>

<!-- Update Section -->
<div class="form-container" id="updateSection" style="display: none;">
    <h3>Update User</h3>
    <form id="updateForm">
        <input type="hidden" id="updateUserId"> <!-- Hidden field for user ID -->
        <input type="text" id="updateName" placeholder="Name" required>
        <input type="email" id="updateEmail" placeholder="Email" required>
        <input type="date" id="updateDateOfBirth" placeholder="Date of Birth" required>
        <input type="text" id="updateLocation" placeholder="Location" required>
        <button type="submit">Update</button>
        <button type="button" onclick="cancelUpdate()">Cancel</button>
    </form>
</div>

<!-- Button to View All Users -->
<div class="form-container" style="text-align: center;">
    <button onclick="loadUsers()">View All Users</button>
</div>

<!-- All Users Table Section -->
<div class="users-table-container" id="usersTableContainer" style="display: none;">
    <h3>All Registered Users</h3>
    <table id="usersTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Date of Birth</th>
                <th>Location</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- User rows will be inserted here -->
        </tbody>
    </table>
</div>

<script>
    // Load all users and display them in the table
    function loadUsers() {
        fetch('http://localhost:8080/api/regist')
            .then(response => response.json())
            .then(users => {
                const tableBody = document.querySelector("#usersTable tbody");
                tableBody.innerHTML = ''; // Clear existing rows
                users.forEach(user => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>${user.dateOfBirth}</td>
                        <td>${user.location}</td>
                        <td>
                            <button onclick="editUser(${user.id})">Update</button>
                            <button onclick="deleteUser(${user.id})">Delete</button>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });

                // Show the users table
                document.getElementById("usersTableContainer").style.display = "block";
            })
            .catch(error => console.error('Error fetching users:', error));
    }

    // Register a new user
    document.getElementById("registerForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const user = {
            name: document.getElementById("regName").value,
            email: document.getElementById("regEmail").value,
            dateOfBirth: document.getElementById("regDateOfBirth").value,
            location: document.getElementById("regLocation").value,
        };

        fetch('http://localhost:8080/api/regist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(user),
        })
            .then(response => response.json())
            .then(() => {
                alert('User registered successfully!');
                document.getElementById("registerForm").reset();
                loadUsers(); // Refresh the users list
            })
            .catch(error => console.error('Error registering user:', error));
    });

    // Edit user and populate the update form
    function editUser(id) {
        fetch(`http://localhost:8080/api/regist/${id}`)
            .then(response => response.json())
            .then(user => {
                document.getElementById("updateUserId").value = user.id;
                document.getElementById("updateName").value = user.name;
                document.getElementById("updateEmail").value = user.email;
                document.getElementById("updateDateOfBirth").value = user.dateOfBirth;
                document.getElementById("updateLocation").value = user.location;

                // Show update section and hide register section
                document.getElementById("registerSection").style.display = "none";
                document.getElementById("updateSection").style.display = "block";
            })
            .catch(error => console.error('Error fetching user for edit:', error));
    }

    // Update user
    document.getElementById("updateForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const userId = document.getElementById("updateUserId").value;
        const user = {
            name: document.getElementById("updateName").value,
            email: document.getElementById("updateEmail").value,
            dateOfBirth: document.getElementById("updateDateOfBirth").value,
            location: document.getElementById("updateLocation").value,
        };

        fetch(`http://localhost:8080/api/regist/${userId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(user),
        })
            .then(() => {
                alert('User updated successfully!');
                cancelUpdate(); // Return to the register form
                loadUsers(); // Refresh the users list
            })
            .catch(error => console.error('Error updating user:', error));
    });

    // Cancel update and show the register form
    function cancelUpdate() {
        document.getElementById("updateForm").reset();
        document.getElementById("registerSection").style.display = "block";
        document.getElementById("updateSection").style.display = "none";
    }

    // Delete user
    function deleteUser(id) {
        fetch(`http://localhost:8080/api/regist/${id}`, {
            method: 'DELETE',
        })
            .then(() => {
                alert('User deleted successfully!');
                loadUsers(); // Refresh the users list
            })
            .catch(error => console.error('Error deleting user:', error));
    }
</script>

</body>
</html>

